name: Deploy Pipeline
# todo: ADD HERE AFTER INTEGRATING SUPABASE
env:
  NEXT_PUBLIC_SUPABASE_URL: https://wtzgcdichgezejjnmzly.supabase.co
  NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind0emdjZGljaGdlemVqam5temx5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTkwNzg0NDMsImV4cCI6MjAzNDY1NDQ0M30.rl_KisHIVxHob9TXOGHej8gJPKdE0is2RSEEj6SrtN4
  NEXT_TELEMETRY_DISABLED: 1
on: [push, pull_request]
jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install
        working-directory: .

      - name: Format App
        run: bun run format
        working-directory: .

  lint:
    name: Lint
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install
        working-directory: .

      - name: Lint App
        run: bun run lint
        working-directory: .

  # todo: add here after adding tests
  # test:
  #   name: Test
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Install Bun
  #       uses: oven-sh/setup-bun@v1

  #     - name: Install Dependencies
  #       run: bun install
  #       working-directory: .

  #     - name: Test App
  #       run: bun run test
  #       working-directory: .

  build:
    name: Build
    # needs: test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install
        working-directory: .

      - name: Build App
        run: bun run build
        working-directory: .

  # docker:
  #   name: Docker
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3.3.0

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3.1.0
  #       with:
  #         username: ${{ vars.DOCKER_USER }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5.3.0
  #       with:
  #         context: ./client-app
  #         push: true
  #         tags: ${{ vars.DOCKER_USER }}/crm-saas:latest
  #         platforms: linux/amd64

  # - name: Docker Hub Description
  #   uses: peter-evans/dockerhub-description@v4
  #   with:
  #     username: ${{ vars.DOCKER_USER }}
  #     password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     repository: ${{ vars.DOCKER_USER }}/crm-saas
  #     readme-filepath: ./README.md
# todo: add k8 steps and more

